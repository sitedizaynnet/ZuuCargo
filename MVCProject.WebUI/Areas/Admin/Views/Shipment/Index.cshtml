@model IEnumerable<MVCProject.Common.ViewModels.ShipmentVM>

@{
    ViewBag.Title = "Shipments";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="~/Theme/js/jquery-3.5.1.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/Theme/js/datatables.min.css">
<script src="~/Theme/js/jquery.printPage.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
<!-- Include Date Range Picker -->
<script type="text/javascript" src="//cdn.jsdelivr.net/bootstrap.daterangepicker/2/daterangepicker.js"></script>
<link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/bootstrap.daterangepicker/2/daterangepicker.css" />


<script type="text/javascript" charset="utf8" src="~/Theme/js/datatables.min.js"></script>
<script type="text/javascript" charset="utf8" src="~/Theme/js/buttons.colVis.min.js"></script>



<div style="overflow: scroll;">
    <p>

        <a class="btn btn-app" href="/Admin/Shipment/Create">

            <i class="fa fa-plus"></i> Create New
        </a>
        <a class="btn btn-app" href="/Admin/Shipment/CreatePTT">

            <i class="fa fa-plus"></i> Create PTT
        </a> <a class="btn btn-app" href="/Admin/Shipment/CreateTurpex">

            <i class="fa fa-plus"></i> Create Turpex
        </a>
    </p>
    <div id="reportrange" class="btn btn-success btn-lg">

        <span></span> <b class="caret"></b>

    </div>
    <div>
        <input type="checkbox" class="checkbox-inline" id="chkConfirmed" name="chkConfirmed" value="true">
        <label for="chkConfirmed"> Not Confirmed</label>
    </div>
    <br />
    <table class="table" id="table_id">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.TrackingNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UserId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiverName)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.ReceiverTelephoneNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiverCountryId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MoneyForBuy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsDelivered)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsConfirmed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShipmentDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsApiSuccess)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TrackingNo)
                    </td>
                    <td>
                        @foreach (MVCProject.Entities.ZuuCargoEntities.ApplicationUser seller in (List<MVCProject.Entities.ZuuCargoEntities.ApplicationUser>)ViewBag.UserList)
                        {
                            if (seller.Id == item.UserId)
                            {
                                @seller.FirstName @seller.LastName

                            }


                        }
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ReceiverName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReceiverTelephoneNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReceiverCountryId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MoneyForBuy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsDelivered)
                    </td>
                    <td>
                        @((item.IsConfirmed == true)? "Confirmed":"Not Confirmed")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShipmentDate)
                    </td>
                    <td>
                        @if (item.IsApiSuccess == 1)
                        {

                            <img height="20" src="~/Theme/images/ok.svg" />

                        }
                        else
                        {


                            <a href="/Admin/Shipment/SendDataAgain/@item.Id"> <img height="20" src="~/Theme/images/cross.svg" /></a>

                        }
                    </td>


                    <td>
                        <select id="dynamic_select @item.Id" onchange="window.location = this.options[this.selectedIndex].value">
                            <option value="" selected>Pick a Action</option>
                            <option value="/Admin/Shipment/Details/@item.Id">Details</option>
                            <option value="/Admin/Shipment/Delete/@item.Id">Delete</option>
                            <option value="/Admin/Shipment/TrackSMS/@item.Id">Track SMS</option>
                            <option value="/Admin/Shipment/TrackSMSAcente/@item.Id">Track SMS Acente</option>
                            <option value="/Admin/Shipment/SendNotificationJson/@item.Id">Notify</option>
                            <option value="/Admin/Shipment/AddOtherLink/@item.Id">AddLink</option>
                            <option value="/Admin/Shipment/ConfirmUserPackageTurpex/@item.Id">Confirm Turpex</option>
                            <option value="/Admin/Shipment/ConfirmUserPackagePTT/@item.Id">Confirm PTT</option>


                        </select>



                        <a class="btnPrint" href='/Admin/Shipment/GetCargoLabel/@item.Id'>PrintLabel</a>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@*<script src="~/Theme/js/jquery-1.4.4.min.js" type="text/javascript"></script>*@

<script>


    $(document).ready(function () {
        $(".btnPrint").printPage();
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        var oTable = $('#table_id').DataTable(
            {
                dom: 'Bfrtip',
                buttons: [
                    'copy', 'excel', 'colvis'
                    ,
                    {
                        extend: 'pdfHtml5',
                        title: function () {
                            return "Shipments";
                        },
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7, 8]
                        },
                        orientation: 'landscape',
                        pageSize: 'A4',
                        text: '<i class="fa fa-file-pdf-o"> PDF</i>',
                        titleAttr: 'PDF'
                    }

                ],

                fixedColumns: false,
                autoFill: true,
                colReorder: true,
                fixedColumns: false,
                responsive: false,
                keys: true,
                rowReorder: true,
                select: true
            });

        $(document).on('change', 'input[name="chkConfirmed"]', function () {
            if (this.checked) {
                oTable.columns(6).search("Not Confirmed").draw();
            } else {
                oTable.columns(6).search("").draw();
            }
        });

        // Extend dataTables search


        var start = moment("01.01.2022");
        var end = moment("01.04.2022");

        function cb(start, end) {
            $('#reportrange span').html(start.format('DD.MM.YYYY') + ' - ' + end.format('DD.MM.YYYY'));
        }

        $('#reportrange').daterangepicker({
            startDate: start,
            endDate: end,
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);

        cb(start, end);


        $('#reportrange').on('apply.daterangepicker', function (ev, picker) {
            var start = picker.startDate;
            var end = picker.endDate;


            $.fn.dataTable.ext.search.push(
                function (settings, data, dataIndex) {
                    var min = start;
                    var max = end;
                    var startDate = new Date(data[8]);

                    if (min == null && max == null) {
                        return true;
                    }
                    if (min == null && startDate <= max) {
                        return true;
                    }
                    if (max == null && startDate >= min) {
                        return true;
                    }
                    if (startDate <= max && startDate >= min) {
                        return true;
                    }
                    return false;
                }
            );
            oTable.draw();
            $.fn.dataTable.ext.search.pop();
        });

    })
   
  

</script>